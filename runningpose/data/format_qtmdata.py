# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/17_format_qtmdata.ipynb (unless otherwise specified).

__all__ = ['labels_np', 'data_3D', 'data_3D', 'data_3D', 'left_elbow_3D', 'right_elbow_3D', 'left_wrist_3D',
           'right_wrist_3D', 'left_knee_3D', 'right_knee_3D', 'left_waist_3D', 'right_waist_3D', 'data_3D', 'data_3D',
           'data_3D_scaled', 'data_3D']

# Cell
import numpy as np
import pandas as pd

# Cell
# Loads the textfiles
labels_np = np.loadtxt('/home/richard/Downloads/Alvin_static/labels_py.txt', dtype = 'str')
data_3D = np.loadtxt('/home/richard/Downloads/Alvin_static/Alvin_static_3D_py.txt',
                     dtype = 'float', delimiter= ',')

# Cell
# Reformats the data to a dataframe
data_3D = pd.DataFrame(data_3D, index=labels_np).T

# Cell
# Remove unwanted keypoints
data_3D = data_3D.drop(
    columns=['HeadL', 'HeadR', 'Chest', 'LThighFrontLow', 'RThighFrontLow', 'LShinFrontHigh', 'RShinFrontHigh', 'LForefoot2', 'LForefoot5', 'RForefoot2', 'RForefoot5', 'LHeelBack', 'RHeelBack', 'LArm', 'RArm']
)

# Cell
# Create "new" keypoints by finding the mean between some specific keypoints
left_elbow_3D = data_3D.loc[:, ['LElbowOut','LElbowIn']].mean(axis=1)
right_elbow_3D = data_3D.loc[:, ['RElbowOut','RElbowIn']].mean(axis=1)

left_wrist_3D = data_3D.loc[:, ['LWristIn','LWristOut']].mean(axis=1)
right_wrist_3D = data_3D.loc[:, ['RWristOut','RWristIn']].mean(axis=1)

left_knee_3D = data_3D.loc[:, ['LKneeOut','LKneeIn']].mean(axis=1)
right_knee_3D = data_3D.loc[:, ['RKneeOut','RKneeIn']].mean(axis=1)

left_waist_3D = data_3D.loc[:, ['WaistLFront','WaistL']].mean(axis=1)
right_waist_3D = data_3D.loc[:, ['WaistRFront','WaistR']].mean(axis=1)

# Cell
# Remove the keypoints that was taken as a mean and add the new one found above
data_3D = data_3D.drop(
    columns=['LElbowOut','LElbowIn', 'RElbowOut','RElbowIn', 'LWristIn','LWristOut', 'RWristIn','RWristOut', 'LKneeIn','LKneeOut', 'RKneeIn','RKneeOut', 'WaistLFront','WaistL', 'WaistRFront','WaistR']
)

data_3D['LElbow'] = left_elbow_3D
data_3D['RElbow'] = right_elbow_3D
data_3D['LWrist'] = left_wrist_3D
data_3D['RWrist'] = right_wrist_3D
data_3D['LKnee'] = left_knee_3D
data_3D['RKnee'] = right_knee_3D
data_3D['LWaist'] = left_waist_3D
data_3D['RWaist'] = right_waist_3D

# Cell
# Convert all the data relative to the root 'WaistBack'
data_3D = data_3D.subtract(data_3D['WaistBack'], axis=0)

# Cell
# Scale each frame with a norm vector
data_3D_scaled = []
for i in range(0, data_3D.shape[0], 3):
    # Calculates the scale factor for each frame
    norm_vector = np.sqrt(np.square(data_3D['SpineThoracic2'].iloc[i:i+3]).sum(axis=0))
    data_3D_scaled.append(data_3D.iloc[i:i+3].divide(norm_vector))

# Reformat to dataframe again after all data has been scaled
data_3D = pd.concat(data_3D_scaled, ignore_index=True)

# Cell
data_3D